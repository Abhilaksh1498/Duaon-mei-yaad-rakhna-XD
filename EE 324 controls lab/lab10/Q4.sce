clear;
s = %s;
A = [1, 1, 0; 0, 1, 2; 0, 0, 4];
B = [1; 2; 3];
C = [1, 1, 7];
I = eye(3, 3);
D = 5;
G = D + C * inv(s*I - A) * B;
printf("G(s) for a1 = a3 :\n");
disp(G);
eig_values = spec(A);
printf("Eigenvalues of A : \n");
disp(eig_values);
poles = roots(G.den);
printf("Poles of A : \n");
disp(poles);

A = [1, 0, 0; 0, 4, 2; 0, 0, 1];
B = [1; 4; 3];
C = [1, 1, 7];
I = eye(3, 3);
D = 5;
G = D + C * inv(s*I - A) * B;
printf("G(s) for a1 = a5 :\n");
disp(G);
eig_values = spec(A);
printf("Eigenvalues of A : \n");
disp(eig_values);
poles = roots(G.den);
printf("Poles of A : \n");
disp(poles);

A = [1, 1, 0; 0, 1, 2; 0, 0, 4];
B = [1; 2; 3];
C = [1, 1, 7];
I = eye(3, 3);
D = 5;
G = D + C * inv(s*I - A) * B;
printf("G(s) for a3 = a5 :\n");
disp(G);
eig_values = spec(A);
printf("Eigenvalues of A : \n");
disp(eig_values);
poles = roots(G.den);
printf("Poles of A : \n");
disp(poles);

A = [4, 1, 0; 0, 1, 2; 0, 0, 1];
B = [1; 2; 3];
C = [3, 1, 2];
I = eye(3, 3);
D = 5;
G = D + C * inv(s*I - A) * B;
printf("G(s) for a3 = a5 :\n");
disp(G);
eig_values = spec(A);
printf("Eigenvalues of A : \n");
disp(eig_values);
poles = roots(G.den);
printf("Poles of A : \n");
disp(poles);
